{"version":3,"sources":["components/Menu.js","Layout.js","components/MyMap.js","components/Home.js","components/Weather.js","components/CollapsibleTable.js","components/History.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["Menu","React","useState","value","setValue","BottomNavigation","className","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","component","Link","to","Layout","Component","MyMap","props","map","setMap","mapContainer","useRef","useEffect","mapboxgl","accessToken","process","Map","container","current","style","center","zoom","pitch","bearing","antialias","on","console","log","getCenter","getBearing","getPitch","resize","navigator","geolocation","getCurrentPosition","position","setCenter","coords","longitude","latitude","err","addSource","addLayer","initializeMap","ref","el","width","height","require","Home","state","weather","blabla","map1","a","b","c","map2","set","lat","lon","fetch","then","res","json","data","setState","temp","main","catch","styles","fontSize","marginBottom","JSON","stringify","this","undefined","Card","id","CardContent","Typography","color","gutterBottom","progress","Weather","toJS","parse","description","name","age","history","date","CollapsibleTable","row","open","setOpen","Fragment","TableRow","TableCell","size","scope","onClick","min","max","src","alt","humidity","pressure","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","variant","Table","TableHead","align","TableBody","dataWeather","formatXAxis","unix_timestamp","Date","dd","getDate","mm","getMonth","createData","calories","fat","carbs","protein","theme","table","minWidth","History","classes","daily","top","right","left","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","tick","tickFormatter","type","stroke","fillOpacity","fill","TableContainer","Paper","aria-label","key","day","dt","About","App","path","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e06fc88b.chunk.js","sourcesContent":["import React from 'react';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport MapOutlinedIcon from '@material-ui/icons/MapOutlined';\nimport { Link } from 'react-router-dom';\n\n\nexport default function Menu() {\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation className=\"menu\"\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      //className={classes.menu}\n    >\n      <BottomNavigationAction className=\"menu-item\" label=\"Weather Forecast\" icon={<RestoreIcon />}\n      component={Link}\n      to=\"/weather-app/weather\" />\n      <BottomNavigationAction className=\"menu-item\" label=\"Map\" icon={<MapOutlinedIcon />}\n      component={Link}\n      to=\"/weather-app/map\"\n       />\n      <BottomNavigationAction className=\"menu-item\" label=\"History\" icon={<EqualizerIcon />}\n      component={Link}\n      to=\"/weather-app/history\"\n       />\n      <BottomNavigationAction className=\"menu-item\" label=\"About\" icon={<LocationOnIcon />} \n            component={Link}\n            to=\"/weather-app/about\"\n            />\n    </BottomNavigation>\n  );\n}","\nimport React from 'react';\nimport Menu from './components/Menu';\n\nclass Layout extends React.Component {\n\n\n    render() {\n\n        return  <Menu></Menu>  ;\n    }\n\n}\nexport default Layout;","import React,{useEffect, useState,useRef } from 'react';\nimport mapboxgl from \"mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nfunction MyMap(props) {\n/*\n  const [viewport,setViewport] = useState({\n    width: 600,\n    height: 600,\n    latitude: 51.507351 ,\n    longitude: -0.127758 ,\n    zoom: 8\n  });\n\n  \n  const componentDidMount=()=> {\n    let lat = null;\n    let lon = null;\n    navigator.geolocation.getCurrentPosition(\n\n      position => {\n        console.log('position')\n        console.log(position)\n        lat = position.coords.latitude;\n        lon = position.coords.longitude;\n        setViewport(          \n             {\n              width: 600,\n              height: 600,\n              latitude: position.coords.latitude,\n              longitude: position.coords.longitude,\n              zoom: 8\n            }        \n        );\n        console.log(this.state);\n      },\n      err => console.log(err)\n    );\n  }\n\nconst changeViewPort = (viewPort1)=>{\n\n  setViewport(viewPort1)\n}\nreturn (\n      <div className=\"content\">\n        <h2>Map</h2>\n\n        <div className=\"row center \">\n        <ReactMapGL\n        width={viewport.width}\n        height={viewport.height}\n        latitude={viewport.latitude}\n        longitude={viewport.longitude}\n        zoom={viewport.zoom}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        onViewportChange={viewport=>changeViewPort(viewport)}\n      >\n\n         </ReactMapGL>\n        </div>\n\n      </div>\n    );\n*/\nconst [map, setMap] = useState(null);\nconst styles = {\n  width: \"50vw\",\n  height: \"calc(50vh - 80px)\",\n  position: \"absolute\"\n};\nconst mapContainer = useRef(null);\n    useEffect(() => {\n      mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\n      const initializeMap = ({ setMap, mapContainer }) => {\n        const map = new mapboxgl.Map({\n         /* container: mapContainer.current,\n          style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n          center: [0, 0],\n          zoom: 5\n          */\n         container: mapContainer.current,\n//style: 'mapbox://styles/mapbox/dark-v10',\nstyle: 'mapbox://styles/mapbox/streets-v11',\n//style: 'mapbox://styles/mapbox/satellite-v11',\ncenter: [6.928166326175642, 46.99061286692401],\nzoom: 15.99,\npitch: 40,\nbearing: 20,\nantialias: true\n        });\n\n\n        map.on(\"dragend\", () => {\n          console.log(  map.getCenter());          \n          console.log(  map.getBearing());\n          console.log(  map.getPitch());\n        });\n        map.on(\"zoomend\", () => {\n          console.log(  map.getCenter());\n          console.log(  map.getBearing());\n          console.log(  map.getPitch());\n        });\n        map.on(\"load\", () => {\n          setMap(map);\n          map.resize();\n          \n          navigator.geolocation.getCurrentPosition(\n            position => {\n              map.setCenter([position.coords.longitude,position.coords.latitude])\n            },\n            err => console.log(err)\n          );\n\n          map.addSource('floorplan', {\n            // GeoJSON Data source used in vector tiles, documented at\n            // https://gist.github.com/ryanbaumann/a7d970386ce59d11c16278b90dde094d\n            'type': 'geojson',\n            'data':\n            'https://docs.mapbox.com/mapbox-gl-js/assets/indoor-3d-map.geojson'\n            });\n            map.addLayer({\n            'id': 'room-extrusion',\n            'type': 'fill-extrusion',\n            //'source': 'floorplan',\n            'source': 'composite',\n            'source-layer': 'building',\n            'paint': {\n            // See the Mapbox Style Specification for details on data expressions.\n            // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions\n             \n            // Get the fill-extrusion-color from the source 'color' property.\n            'fill-extrusion-color': ['get', 'color'],\n             \n            // Get fill-extrusion-height from the source 'height' property.\n            'fill-extrusion-height': ['get', 'height'],\n             \n            // Get fill-extrusion-base from the source 'base_height' property.\n            'fill-extrusion-base': ['get', 'base_height'],\n             \n            // Make extrusions slightly opaque for see through indoor walls.\n            'fill-extrusion-opacity': 0.5\n            }\n            });\n\n        });\n\n      };\n  \n      if (!map) initializeMap({ setMap, mapContainer });\n    }, [map]);\n  \n    return     <div ref={el => (mapContainer.current = el)} style={styles} />    ;\n  \n}\n\nexport default MyMap;","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Progress from 'react-circle-progress-bar'\nimport 'react-circular-progressbar/dist/styles.css';\nimport MyMap from './MyMap';\nconst { Map } = require('immutable');\nconst OPEN_WEATHER_API_TOKEN = process.env.REACT_APP_OPEN_WEATHER_TOKEN;\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { weather: [], position: [] };\n    this.blabla = 'blabla';\n    this.map1 = Map({ a: 1, b: 2, c: 3 });\n    this.map2 = this.map1.set('b', 50);   \n  }\n\n  componentDidMount() {\n    console.log(\"Weather Data Retrieval...\");\n    let lat = null;\n    let lon = null;\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        //console.log('position')\n        //console.log(position)\n        lat = position.coords.latitude;\n        lon = position.coords.longitude;\n        //meteo actuelle weather?\n        let weatherCurrent = 'https://api.openweathermap.org/data/2.5/weather?lat=' + lat + '&lon=' + lon + '&units=metric&appid='+OPEN_WEATHER_API_TOKEN;\n        // forecast pour les prevision par default retourne une liste de 7\n        //let weatherForecast = 'https://api.openweathermap.org/data/2.5/forecast/daily?lat='+lat+'&lon='+lon+'&units=metric&appid=526309393592f5cf6ed361609dfd8e78';\n        //'https://api.openweathermap.org/data/2.5/forecast/daily?q=Neuchatel&units=metric&appid=526309393592f5cf6ed361609dfd8e78')\n        fetch(weatherCurrent)\n          .then(res => res.json())\n          .then((data) => {\n            console.log('----weather data object in promise-------');\n            console.log(data);\n            //console.log(JSON.parse(JSON.stringify(data)));\n           // console.log(JSON.stringify(data.weather[0].description));\n            this.setState({\n              weather: data,\n              temp: data.main.temp,\n              position: position\n            });\n          })\n          .catch(console.log('error'))\n\n      },\n      err => console.log(err)\n    );\n\n  }\n  render() {\n    console.log('render')\n\n    const styles = {\n      root: {\n        minWidth: 275,\n      },\n      bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n      },\n      title: {\n        fontSize: 24,\n      },\n      pos: {\n        marginBottom: 12,\n      },\n    };\n\n    console.log(JSON.stringify(styles.title.fontSize));\n    console.log('weather json object');\n    console.log(this.state);\n    console.log(JSON.stringify(this.state.weather.main));\n    //if(this.state.weather.main){\n\n      this.state.weather.main=== undefined?console.log('loading...'):console.log(this.state.weather.main.temp);\n    \n    \n   \n    return (\n      <div className=\"content\">\n        <h2>Home</h2>\n        <div className=\"row space-between debugBorderFushia\">\n          <Card id=\"card\" className=\"column info\">\n            <CardContent>\n              <Typography component={'span'} style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"primary\" gutterBottom>\n                <div>             Information Alert      </div>\n              </Typography>\n              <Typography component={'span'} className={JSON.stringify(styles.pos)} gutterBottom>\n                <div className=\"valueable \">\n                  <div className=\"cardRow value \">5</div>\n                  <div className=\"cardRow central fix debugBorderFushia\">\n                    <div className=\"center\">\n                      <div className=\"title\">This is a Title</div>\n                      <div className=\"description\" >Description: This is a short description</div>\n                    </div>\n                  </div>\n                  <div className=\"cardRow icon\">\n                    <InfoIcon style={{ fontSize: 50 }} ></InfoIcon>\n                  </div>\n                  <div className=\"cardRow center\">\n                    <Progress progress={75} />\n\n                  </div>\n\n                </div>\n              </Typography>\n\n            </CardContent>\n\n          </Card>\n\n\n          <Card id=\"card2\" className=\"column warn\">\n            <CardContent>\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"primary\" gutterBottom>\n                Word of the Day Primary 2\n        </Typography>\n              <Typography className={JSON.stringify(styles.pos)} color=\"secondary\" gutterBottom>\n                Word of the Day Secondary 2\n        </Typography>\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"textPrimary\" gutterBottom>\n                Word of the Day textPrimary 2\n        </Typography>\n              <Typography className={JSON.stringify(styles.pos)} color=\"textSecondary\" gutterBottom>\n                Word of the Day textSecondary 2\n        </Typography>\n            </CardContent>\n\n          </Card>\n\n\n          <Card id=\"card3\" className=\"column error\">\n            <CardContent>\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"primary\" gutterBottom>\n                Word of the Day Primary 3\n        </Typography>\n              <Typography className={JSON.stringify(styles.pos)} color=\"secondary\" gutterBottom>\n                Word of the Day Secondary 3\n        </Typography>\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"textPrimary\" gutterBottom>\n                Word of the Day textPrimary 3\n        </Typography>\n              <Typography className={JSON.stringify(styles.pos)} color=\"textSecondary\" gutterBottom>\n                Word of the Day textSecondary 3\n        </Typography>\n            </CardContent>\n\n          </Card>\n\n        </div>\n        <div className=\"row space-between center map debugBorderGreen\">\n          <MyMap></MyMap>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport InfoIcon from '@material-ui/icons/Info';\nimport 'react-circular-progressbar/dist/styles.css';\nimport MyMap from './MyMap';\nconst { Map } = require('immutable');\n\nclass Weather extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { weather: [], position: [] };\n    this.blabla = 'blabla';\n    this.map1 = Map({ a: 1, b: 2, c: 3 });\n    this.map2 = this.map1.set('b', 50);\n\n    console.log('immutable object ');\n    console.log(this.map1);\n    console.log(this.map2);\n    console.log(this.map1.toJS());\n    console.log(this.map2.toJS());\n  }\n\n  componentDidMount() {\n    console.log(\"Weather Data Retrieval...\");\n    let lat = null;\n    let lon = null;\n    navigator.geolocation.getCurrentPosition(\n\n      position => {\n        console.log('position')\n        console.log(position)\n        lat = position.coords.latitude;\n        lon = position.coords.longitude;\n        //meteo actuelle weather?\n        let weatherCurrent = 'https://api.openweathermap.org/data/2.5/weather?lat=' + lat + '&lon=' + lon + '&units=metric&appid=526309393592f5cf6ed361609dfd8e78';\n        // forecast pour les prevision par default retourne une liste de 7\n        //let weatherForecast = 'https://api.openweathermap.org/data/2.5/forecast/daily?lat='+lat+'&lon='+lon+'&units=metric&appid=526309393592f5cf6ed361609dfd8e78';\n        //'https://api.openweathermap.org/data/2.5/forecast/daily?q=Neuchatel&units=metric&appid=526309393592f5cf6ed361609dfd8e78')\n        fetch(weatherCurrent)\n          .then(res => res.json())\n          .then((data) => {\n            console.log('----weather data object in promise-------');\n            console.log(JSON.parse(JSON.stringify(data)));\n            console.log(JSON.stringify(data.weather[0].description));\n            this.setState({\n              weather: data,\n              temp: data.main.temp,\n              position: position\n            });\n          })\n          .catch(console.log('error'))\n\n      },\n      err => console.log(err)\n    );\n\n  }\n\n  render() {\n    console.log('render')\n\n    const styles = {\n      root: {\n        minWidth: 275,\n      },\n      bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n      },\n      title: {\n        fontSize: 24,\n      },\n      pos: {\n        marginBottom: 12,\n      },\n    };\n\n    console.log(JSON.stringify(styles.title.fontSize));\n    console.log('weather json object');\n    console.log(this.state);\n    console.log(JSON.stringify(this.state.weather.main));\n    //if(this.state.weather.main){\n\n      this.state.weather.main=== undefined?console.log('loading...'):console.log(this.state.weather.main.temp);\n  \n    return (\n      <div className=\"content\">\n        <h2>Weather</h2>\n        <div className=\"row space-between debugBorderFushia\">\n          <Card id=\"card\" className=\"column info\">\n            <CardContent>\n              <Typography component={'span'} style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"primary\" gutterBottom>\n                <div>             Information Alert      </div>\n              </Typography>\n              <Typography component={'span'} className={JSON.stringify(styles.pos)} gutterBottom>\n                <div className=\"valueable \">\n                  <div className=\"cardRow value \">5</div>\n                  <div className=\"cardRow central fix debugBorderFushia\">\n                    <div className=\"center\">\n                      <div className=\"title\">This is a Title</div>\n                      <div className=\"description\" >Description: This is a short description</div>\n                    </div>\n                  </div>\n                  <div className=\"cardRow icon\">\n                    <InfoIcon style={{ fontSize: 50 }} ></InfoIcon>\n                  </div>\n                </div>\n              </Typography>\n\n            </CardContent>\n\n          </Card>\n\n\n          <Card id=\"card2\" className=\"column warn\">\n            <CardContent>\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"primary\" gutterBottom>\n                Word of the Day Primary 2\n          </Typography>\n                <Typography className={JSON.stringify(styles.pos)} color=\"secondary\" gutterBottom>\n                  Word of the Day Secondary 2\n          </Typography>\n                <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"textPrimary\" gutterBottom>\n                  Word of the Day textPrimary 2\n          </Typography>\n                <Typography className={JSON.stringify(styles.pos)} color=\"textSecondary\" gutterBottom>\n                  Word of the Day textSecondary 2\n          </Typography>\n            </CardContent>\n\n          </Card>\n\n\n          <Card id=\"card3\" className=\"column error\">\n            <CardContent>\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"primary\" gutterBottom>\n                Word of the Day Primary 3\n              </Typography>\n                    <Typography className={JSON.stringify(styles.pos)} color=\"secondary\" gutterBottom>\n                      Word of the Day Secondary 3\n              </Typography>\n                    <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"textPrimary\" gutterBottom>\n                      Word of the Day textPrimary 3\n              </Typography>\n                    <Typography className={JSON.stringify(styles.pos)} color=\"textSecondary\" gutterBottom>\n                      Word of the Day textSecondary 3\n              </Typography>\n            </CardContent>\n\n          </Card>\n\n        </div>\n   \n        <div className=\"row space-between center map debugBorderGreen\">\n          <MyMap></MyMap>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Weather;","import React,{useEffect, useState,useRef } from 'react';\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\n\nfunction createData(name, age, history) {\n  return { name, age, history };\n}\nconst rows = [createData(\"james\", 15, [{ date: \"2020-01-01\" }])];\n\n\nfunction CollapsibleTable(props) {\n    const { row } = props;\n    const [open, setOpen] = React.useState(false);\n  \n    console.log('Collapsible Table');\n    console.log(row);\n    console.log(\"http://openweathermap.org/img/wn/\"+row?.weather?.[0]?.icon+\"@2x.png\");\n    return     (\n        <React.Fragment>\n        <TableRow>\n          <TableCell size=\"medium\" component=\"th\" scope=\"row\"   onClick={() => setOpen(!open)}>\n               <div className=\"history-row space-between\">\n                    <h1>Overview</h1>\n                    <div className=\"column\">Temp Min {row?.temp?.min}</div>\n                    <div className=\"column\">Temp Max {row?.temp?.max}</div>\n                    <div className=\"column\">Description {row?.weather?.[0]?.main}</div>\n                    <div className=\"column\">\n                        <img src={\"http://openweathermap.org/img/wn/\"+row?.weather?.[0]?.icon+\"@2x.png\"} alt=\"Italian Trulli\"></img>\n                    </div>\n                    <div className=\"column\">Humidity {row?.humidity}</div>\n                    <div className=\"column\">Pressure {row?.pressure}</div>                    \n              </div>           \n           </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n              <Box margin={1}>\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                  Detail\n                </Typography>\n                <Table size=\"small\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell align=\"center\">In progress...</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                             blabla\n                  </TableBody>\n                </Table>\n              </Box>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n      </React.Fragment>\n\n\n    )  ;\n}\n\nexport default CollapsibleTable;","import React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport '.././History.css';\nimport { AreaChart,Area, XAxis, YAxis, Legend,ResponsiveContainer} from 'recharts';\nimport CollapsibleTable from './CollapsibleTable';\n\n\nlet dataWeather = [];\n\nconst formatXAxis = (unix_timestamp) => {\n  var date = new Date(unix_timestamp * 1000);\n  var dd = date.getDate();\n  var mm = date.getMonth()+1;\n  //var yyyy = date.getFullYear();\n  if(dd<10) {dd='0'+dd}\n  if(mm<10) {mm='0'+mm}\nreturn dd+'/'+mm//+yyyy//+' ' + hours + ':' + minutes.substr(-2);\n\n}\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nconst styles = theme => ({\n  table: {\n    minWidth: 650,\n  },\n});\nclass History extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { weather: [], position: [] };\n   \n  }\n  componentDidMount() {\n    let lat = null;\n    let lon = null;\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        lat = position.coords.latitude;\n        lon = position.coords.longitude;\n        //meteo actuelle weather?\n        let weatherCurrent = 'https://api.openweathermap.org/data/2.5/onecall?lat=' + lat + '&lon=' + lon + '&units=metric&appid='+process.env.REACT_APP_OPEN_WEATHER_TOKEN;\n        // forecast pour les prevision par default retourne une liste de 7\n        //let weatherForecast = 'https://api.openweathermap.org/data/2.5/forecast/daily?lat='+lat+'&lon='+lon+'&units=metric&appid=526309393592f5cf6ed361609dfd8e78';\n        //'https://api.openweathermap.org/data/2.5/forecast/daily?q=Neuchatel&units=metric&appid=526309393592f5cf6ed361609dfd8e78')\n        fetch(weatherCurrent)\n          .then(res => res.json())\n          .then((data) => {\n            console.log('----weather data object in promise-------');\n            console.log(data);\n            //dataWeather =getTemperaturesHourly(data);\n            dataWeather= data;\n            this.setState({\n              weather: data,\n             // temp: data.main.temp,\n              position: position\n            });\n          })\n          .catch(console.log('error'))\n\n      },\n      err => console.log(err)\n    );\n\n  }\n  render() {\n    const { classes } = this.props;\n    console.log(classes)\n    return (\n      <div className=\"content\">\n        <h2>History</h2>\n        <div className=\"history-row space-between\">\n        <div className=\"column card-dark\">\n            <div className=\"chart-title\">Température</div>  \n            <div className=\"chart-value\">{dataWeather?.current?.temp}°</div>   \n            <ResponsiveContainer> \n              <AreaChart  \n                data={dataWeather.daily} margin={{   top: 0, right: -20, left: 0, bottom: 15, }}>\n                    <defs>\n                      <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                              <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                              <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                          </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"dt\" tick={{fontSize: 10}} tickFormatter={formatXAxis} />\n                    <Area type=\"monotone\" dataKey=\"temp.day\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                </AreaChart>\n            </ResponsiveContainer>\n           </div>\n           <div className=\"column card-dark\">\n\n              <div className=\"chart-title\">Humidité</div>            \n              <div className=\"chart-value\">{dataWeather?.current?.humidity}%</div>     \n                    <ResponsiveContainer> \n                          <AreaChart  data={dataWeather.daily} margin={{   top: 0, right: -20, left: 0, bottom: 15, }}>\n                              <defs>\n                                <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                    <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                                    <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                                </linearGradient>\n\n                              </defs>\n                              <XAxis dataKey=\"dt\" tick={{fontSize: 10}} tickFormatter={formatXAxis}/>\n                              <Area type=\"monotone\" dataKey=\"humidity\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                          </AreaChart>\n                    </ResponsiveContainer> \n             \n\n</div>\n            <div className=\"column card-dark\">\n            <div className=\"chart-title\">Pression </div> \n            <div className=\"chart-value\">{dataWeather?.current?.pressure} hPa</div>   \n            <ResponsiveContainer> \n                  <AreaChart   \n       \n                  data={dataWeather.daily} margin={{   top: 0, right: -20, left: 0, bottom: 15, }}>\n                      <defs>\n                      <linearGradient id=\"colorAmt\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#923CB5\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#000000\" stopOpacity={0}/>\n                        </linearGradient>\n                      </defs>\n                      <XAxis dataKey=\"dt\" tick={{fontSize: 10}} tickFormatter={formatXAxis}/>                   \n                      <Area type=\"monotone\" dataKey=\"pressure\" stroke=\"#923CB5\" fillOpacity={1} fill=\"url(#colorAmt)\" />\n                  </AreaChart>\n                  </ResponsiveContainer>\n            </div>\n        </div>\n\n        <div className=\"history-row space-between\">\n        <TableContainer component={Paper}>\n          <Table className={styles.table} size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">Date</TableCell>\n                <TableCell align=\"center\">Température</TableCell>\n                <TableCell align=\"center\">Humidité</TableCell>\n                <TableCell align=\"center\">Pression</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {dataWeather?.daily?.map((row) => (\n                <TableRow key={row.temp.day}>\n                  <TableCell align=\"center\">{formatXAxis(row.dt)}</TableCell>\n                  <TableCell align=\"center\">{row.temp.day}</TableCell>\n                  <TableCell align=\"center\">{row.humidity}</TableCell>\n                  <TableCell align=\"center\">{row.pressure}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        </div>\n        <div className=\"history-row space-between fit-content\">\n        <TableContainer component={Paper}>\n      <Table>\n        <TableBody>\n          {dataWeather?.daily?.map(row => (\n            <CollapsibleTable key={row.dt} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default History;","import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n    return (\n        <div  className=\"content\">\n          <h2>About</h2>\n        </div>\n    );\n  }\n}\n\nexport default About;","import React from 'react';\nimport './App.css';\nimport Layout from './Layout'\nimport Home from './components/Home';\nimport Weather from './components/Weather';\nimport History from './components/History';\nimport About from './components/About';\nimport MyMap from './components/MyMap';\n\nimport {Route, Switch } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <div className=\"container\">\n        <main>\n          <Layout></Layout>\n          <Switch>\n            <Route path=\"/weather-app\" component={Home} exact />\n            <Route path=\"/weather-app/weather\" component={Weather} />\n            <Route path=\"/weather-app/map\" component={MyMap} />\n            <Route path=\"/weather-app/history\" component={History} />\n            <Route path=\"/weather-app/about\" component={About} />\n          </Switch>\n\n\n\n        </main>\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root')\n\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}