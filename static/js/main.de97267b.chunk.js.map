{"version":3,"sources":["logo.svg","SideBar.js","Layout.js","components/Home.js","components/Weather.js","components/Settings.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SideBar","List","disablePadding","dense","ListItem","button","ListItemText","to","React","Component","Layout","Map","require","Home","props","state","weather","position","blabla","map1","a","b","c","map2","set","console","log","toJS","lat","lon","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","fetch","then","res","json","data","JSON","parse","stringify","description","setState","temp","main","catch","err","styles","fontSize","marginBottom","this","undefined","className","Card","id","CardContent","Typography","component","style","color","gutterBottom","progress","value","humidity","text","buildStyles","textColor","pathColor","trailColor","Weather","Settings","About","App","path","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.de97267b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link } from 'react-router-dom'\r\nclass SideBar extends React.Component {\r\n\r\n    render() {\r\n        return <List disablePadding dense>\r\n\r\n<ListItem button >\r\n                    <ListItemText>BLALSA</ListItemText>\r\n                </ListItem>\r\n            <Link to=\"/weather-app\">\r\n                <ListItem button >\r\n                    <ListItemText>Home</ListItemText>\r\n                </ListItem>\r\n            </Link>\r\n            <Link to=\"/weather-app/weather\">\r\n                <ListItem button>\r\n                    <ListItemText>Weather Forecast</ListItemText>\r\n                </ListItem>\r\n            </Link>\r\n            <Link to=\"/weather-app/settings\">\r\n                <ListItem button>\r\n                    <ListItemText>Settings</ListItemText>\r\n                </ListItem>\r\n            </Link>\r\n            <Link to=\"/weather-app/about\">\r\n                <ListItem button>\r\n                    <ListItemText>About</ListItemText>\r\n                </ListItem>\r\n            </Link>\r\n\r\n\r\n        </List>\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default SideBar;","\r\nimport React from 'react';\r\nimport SideBar from './SideBar';\r\n\r\n//import SideBar2 from './SideBar2';\r\n\r\nclass Layout extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        return  <SideBar></SideBar>  ;\r\n    }\r\n\r\n}\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Progress from 'react-circle-progress-bar'\r\nimport { CircularProgressbar,  buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { red } from '@material-ui/core/colors';\r\nconst { Map } = require('immutable');\r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { weather: [], position: [] };\r\n    this.blabla = 'blabla';\r\n    this.map1 = Map({ a: 1, b: 2, c: 3 });\r\n    this.map2 = this.map1.set('b', 50);\r\n\r\n    console.log('immutable object ');\r\n    console.log(this.map1);\r\n    console.log(this.map2);\r\n    console.log(this.map1.toJS());\r\n    console.log(this.map2.toJS());\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"Weather Data Retrieval...\");\r\n    let lat = null;\r\n    let lon = null;\r\n    navigator.geolocation.getCurrentPosition(\r\n\r\n      position => {\r\n        console.log('position')\r\n        console.log(position)\r\n        lat = position.coords.latitude;\r\n        lon = position.coords.longitude;\r\n        //meteo actuelle weather?\r\n        let weatherCurrent = 'https://api.openweathermap.org/data/2.5/weather?lat=' + lat + '&lon=' + lon + '&units=metric&appid=526309393592f5cf6ed361609dfd8e78';\r\n        // forecast pour les prevision par default retourne une liste de 7\r\n        //let weatherForecast = 'https://api.openweathermap.org/data/2.5/forecast/daily?lat='+lat+'&lon='+lon+'&units=metric&appid=526309393592f5cf6ed361609dfd8e78';\r\n        //'https://api.openweathermap.org/data/2.5/forecast/daily?q=Neuchatel&units=metric&appid=526309393592f5cf6ed361609dfd8e78')\r\n        fetch(weatherCurrent)\r\n          .then(res => res.json())\r\n          .then((data) => {\r\n            console.log('----weather data object in promise-------');\r\n            console.log(JSON.parse(JSON.stringify(data)));\r\n            console.log(JSON.stringify(data.weather[0].description));\r\n            this.setState({\r\n              weather: data,\r\n              temp: data.main.temp,\r\n              position: position\r\n            });\r\n          })\r\n          .catch(console.log('error'))\r\n\r\n      },\r\n      err => console.log(err)\r\n    );\r\n\r\n  }\r\n  render() {\r\n    console.log('render')\r\n\r\n    const styles = {\r\n      root: {\r\n        minWidth: 275,\r\n      },\r\n      bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n      },\r\n      title: {\r\n        fontSize: 24,\r\n      },\r\n      pos: {\r\n        marginBottom: 12,\r\n      },\r\n    };\r\n\r\n    console.log(JSON.stringify(styles.title.fontSize));\r\n    console.log('weather json object');\r\n    console.log(this.state);\r\n    console.log(JSON.stringify(this.state.weather.main));\r\n    //if(this.state.weather.main){\r\n\r\n      this.state.weather.main=== undefined?console.log('loading...'):console.log(this.state.weather.main.temp);\r\n    \r\n    \r\n   \r\n    return (\r\n      <div className=\"content\">\r\n        <h2>Home</h2>\r\n        <div className=\"row space-between debugBorderFushia\">\r\n          <Card id=\"card\" className=\"column info\">\r\n            <CardContent>\r\n              <Typography component={'span'} style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"primary\" gutterBottom>\r\n                <div>             Information Alert      </div>\r\n              </Typography>\r\n              <Typography component={'span'} className={JSON.stringify(styles.pos)} gutterBottom>\r\n                <div className=\"valueable \">\r\n                  <div className=\"cardRow value \">5</div>\r\n                  <div className=\"cardRow central fix debugBorderFushia\">\r\n                    <div className=\"center\">\r\n                      <div className=\"title\">This is a Title</div>\r\n                      <div className=\"description\" >Description: This is a short description</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"cardRow icon\">\r\n                    <InfoIcon style={{ fontSize: 50 }} ></InfoIcon>\r\n                  </div>\r\n                  <div className=\"cardRow center\">\r\n                    <Progress progress={75} />\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </Typography>\r\n\r\n            </CardContent>\r\n\r\n          </Card>\r\n\r\n\r\n          <Card id=\"card2\" className=\"column warn\">\r\n            <CardContent>\r\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"primary\" gutterBottom>\r\n                Word of the Day Primary 2\r\n        </Typography>\r\n              <Typography className={JSON.stringify(styles.pos)} color=\"secondary\" gutterBottom>\r\n                Word of the Day Secondary 2\r\n        </Typography>\r\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"textPrimary\" gutterBottom>\r\n                Word of the Day textPrimary 2\r\n        </Typography>\r\n              <Typography className={JSON.stringify(styles.pos)} color=\"textSecondary\" gutterBottom>\r\n                Word of the Day textSecondary 2\r\n        </Typography>\r\n            </CardContent>\r\n\r\n          </Card>\r\n\r\n\r\n          <Card id=\"card3\" className=\"column error\">\r\n            <CardContent>\r\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"primary\" gutterBottom>\r\n                Word of the Day Primary 3\r\n        </Typography>\r\n              <Typography className={JSON.stringify(styles.pos)} color=\"secondary\" gutterBottom>\r\n                Word of the Day Secondary 3\r\n        </Typography>\r\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"textPrimary\" gutterBottom>\r\n                Word of the Day textPrimary 3\r\n        </Typography>\r\n              <Typography className={JSON.stringify(styles.pos)} color=\"textSecondary\" gutterBottom>\r\n                Word of the Day textSecondary 3\r\n        </Typography>\r\n            </CardContent>\r\n\r\n          </Card>\r\n\r\n        </div>\r\n        <div className=\"row center debugBorderGreen\">\r\n          <Card className=\"column \">\r\n            <CardContent>\r\n              <Typography component={'span'}>\r\n                <Progress progress={33} />\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className=\"column \">\r\n            <CardContent>\r\n              <Typography component={'span'}>\r\n                Humidité { this.state.weather.main=== undefined ? <div>chargement</div> : \r\n                <CircularProgressbar value={this.state.weather.main.humidity} text={this.state.weather.main.humidity +'%'} \r\n                styles={buildStyles({\r\n                  textColor: \"red\",\r\n                  pathColor: \"turquoise\",\r\n                  trailColor: 'gold'\r\n                })}\r\n                />}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n          <Card className=\"column \">\r\n            <CardContent>\r\n              <Typography component={'span'}>               \r\n                Temperature { this.state.weather.main=== undefined? <div>chargement</div>:    <CircularProgressbar value={this.state.weather.main.temp}  text={this.state.weather.main.temp +'°'} />}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Weather extends Component {\r\n  render() {\r\n    return (\r\n        <div  className=\"content\">>\r\n          <h2>Weather</h2>\r\n          <p>fvgkdfhvgkfjhvkfhvkfvkf\r\n            dbfbdfbbbdb\r\n            dfbdffdbgfbdb\r\n            bbf\r\n            al\r\n          </p>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weather;","import React, { Component } from 'react';\r\n\r\nclass Settings extends Component {\r\n  render() {\r\n    return (\r\n        <div  className=\"content\">\r\n          <h2>Settings</h2>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n        <div  className=\"content\">\r\n          <h2>About</h2>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Layout from './Layout'\r\nimport Home from './components/Home';\r\nimport Weather from './components/Weather';\r\nimport Settings from './components/Settings';\r\nimport About from './components/About';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n\r\n      </header>\r\n      <div className=\"container\">\r\n        <main>\r\n\r\n          <Layout></Layout>\r\n          <Switch>\r\n            <Route path=\"/weather-app\" component={Home} exact />\r\n            <Route path=\"/weather-app/weather\" component={Weather} />\r\n            <Route path=\"/weather-app/settings\" component={Settings} />\r\n            <Route path=\"/weather-app/about\" component={About} />\r\n          </Switch>\r\n\r\n\r\n\r\n        </main>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n    , document.getElementById('root')\r\n\r\n\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}