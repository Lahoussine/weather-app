{"version":3,"sources":["components/Menu.js","Layout.js","components/MyMap.js","components/Home.js","components/Weather.js","components/History.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["Menu","React","useState","value","setValue","BottomNavigation","className","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","component","Link","to","Layout","Component","MyMap","props","map","setMap","mapContainer","useRef","useEffect","mapboxgl","accessToken","process","Map","container","current","style","center","zoom","pitch","bearing","antialias","on","console","log","getCenter","getBearing","getPitch","resize","navigator","geolocation","getCurrentPosition","position","setCenter","coords","longitude","latitude","err","addSource","addLayer","initializeMap","ref","el","width","height","require","Home","state","weather","blabla","map1","a","b","c","map2","set","lat","lon","fetch","then","res","json","data","setState","temp","main","catch","styles","fontSize","marginBottom","JSON","stringify","this","undefined","Card","id","CardContent","Typography","color","gutterBottom","progress","Weather","toJS","parse","description","dataWeather","formatXAxis","unix_timestamp","date","Date","dd","getDate","mm","getMonth","createData","name","calories","fat","carbs","protein","theme","table","minWidth","History","classes","daily","margin","top","right","left","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","tick","tickFormatter","type","stroke","fillOpacity","fill","humidity","pressure","TableContainer","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","key","day","dt","About","App","path","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1b5837e6.chunk.js","sourcesContent":["import React from 'react';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport MapOutlinedIcon from '@material-ui/icons/MapOutlined';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Menu() {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  return (\r\n    <BottomNavigation className=\"menu\"\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      showLabels\r\n      //className={classes.menu}\r\n    >\r\n      <BottomNavigationAction className=\"menu-item\" label=\"Weather Forecast\" icon={<RestoreIcon />}\r\n      component={Link}\r\n      to=\"/weather-app/weather\" />\r\n      <BottomNavigationAction className=\"menu-item\" label=\"Map\" icon={<MapOutlinedIcon />}\r\n      component={Link}\r\n      to=\"/weather-app/map\"\r\n       />\r\n      <BottomNavigationAction className=\"menu-item\" label=\"History\" icon={<EqualizerIcon />}\r\n      component={Link}\r\n      to=\"/weather-app/history\"\r\n       />\r\n      <BottomNavigationAction className=\"menu-item\" label=\"About\" icon={<LocationOnIcon />} \r\n            component={Link}\r\n            to=\"/weather-app/about\"\r\n            />\r\n    </BottomNavigation>\r\n  );\r\n}","\r\nimport React from 'react';\r\nimport Menu from './components/Menu';\r\n\r\nclass Layout extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        return  <Menu></Menu>  ;\r\n    }\r\n\r\n}\r\nexport default Layout;","import React,{useEffect, useState,useRef } from 'react';\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\n\r\nfunction MyMap(props) {\r\n/*\r\n  const [viewport,setViewport] = useState({\r\n    width: 600,\r\n    height: 600,\r\n    latitude: 51.507351 ,\r\n    longitude: -0.127758 ,\r\n    zoom: 8\r\n  });\r\n\r\n  \r\n  const componentDidMount=()=> {\r\n    let lat = null;\r\n    let lon = null;\r\n    navigator.geolocation.getCurrentPosition(\r\n\r\n      position => {\r\n        console.log('position')\r\n        console.log(position)\r\n        lat = position.coords.latitude;\r\n        lon = position.coords.longitude;\r\n        setViewport(          \r\n             {\r\n              width: 600,\r\n              height: 600,\r\n              latitude: position.coords.latitude,\r\n              longitude: position.coords.longitude,\r\n              zoom: 8\r\n            }        \r\n        );\r\n        console.log(this.state);\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\nconst changeViewPort = (viewPort1)=>{\r\n\r\n  setViewport(viewPort1)\r\n}\r\nreturn (\r\n      <div className=\"content\">\r\n        <h2>Map</h2>\r\n\r\n        <div className=\"row center \">\r\n        <ReactMapGL\r\n        width={viewport.width}\r\n        height={viewport.height}\r\n        latitude={viewport.latitude}\r\n        longitude={viewport.longitude}\r\n        zoom={viewport.zoom}\r\n        mapboxApiAccessToken={MAPBOX_TOKEN}\r\n        onViewportChange={viewport=>changeViewPort(viewport)}\r\n      >\r\n\r\n         </ReactMapGL>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n*/\r\nconst [map, setMap] = useState(null);\r\nconst styles = {\r\n  width: \"80vw\",\r\n  height: \"calc(100vh - 80px)\",\r\n  position: \"absolute\"\r\n};\r\nconst mapContainer = useRef(null);\r\n    useEffect(() => {\r\n      mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\r\n      const initializeMap = ({ setMap, mapContainer }) => {\r\n        const map = new mapboxgl.Map({\r\n         /* container: mapContainer.current,\r\n          style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\r\n          center: [0, 0],\r\n          zoom: 5\r\n          */\r\n         container: mapContainer.current,\r\nstyle: 'mapbox://styles/mapbox/dark-v10',\r\n//style: 'mapbox://styles/mapbox/street-v11',\r\n//style: 'mapbox://styles/mapbox/satellite-v11',\r\ncenter: [6.928166326175642, 46.99061286692401],\r\nzoom: 15.99,\r\npitch: 40,\r\nbearing: 20,\r\nantialias: true\r\n        });\r\n\r\n\r\n        map.on(\"dragend\", () => {\r\n          console.log(  map.getCenter());          \r\n          console.log(  map.getBearing());\r\n          console.log(  map.getPitch());\r\n        });\r\n        map.on(\"zoomend\", () => {\r\n          console.log(  map.getCenter());\r\n          console.log(  map.getBearing());\r\n          console.log(  map.getPitch());\r\n        });\r\n        map.on(\"load\", () => {\r\n          setMap(map);\r\n          map.resize();\r\n          \r\n          navigator.geolocation.getCurrentPosition(\r\n            position => {\r\n              map.setCenter([position.coords.longitude,position.coords.latitude])\r\n            },\r\n            err => console.log(err)\r\n          );\r\n\r\n          map.addSource('floorplan', {\r\n            // GeoJSON Data source used in vector tiles, documented at\r\n            // https://gist.github.com/ryanbaumann/a7d970386ce59d11c16278b90dde094d\r\n            'type': 'geojson',\r\n            'data':\r\n            'https://docs.mapbox.com/mapbox-gl-js/assets/indoor-3d-map.geojson'\r\n            });\r\n            map.addLayer({\r\n            'id': 'room-extrusion',\r\n            'type': 'fill-extrusion',\r\n            //'source': 'floorplan',\r\n            'source': 'composite',\r\n            'source-layer': 'building',\r\n            'paint': {\r\n            // See the Mapbox Style Specification for details on data expressions.\r\n            // https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions\r\n             \r\n            // Get the fill-extrusion-color from the source 'color' property.\r\n            'fill-extrusion-color': ['get', 'color'],\r\n             \r\n            // Get fill-extrusion-height from the source 'height' property.\r\n            'fill-extrusion-height': ['get', 'height'],\r\n             \r\n            // Get fill-extrusion-base from the source 'base_height' property.\r\n            'fill-extrusion-base': ['get', 'base_height'],\r\n             \r\n            // Make extrusions slightly opaque for see through indoor walls.\r\n            'fill-extrusion-opacity': 0.5\r\n            }\r\n            });\r\n\r\n        });\r\n\r\n      };\r\n  \r\n      if (!map) initializeMap({ setMap, mapContainer });\r\n    }, [map]);\r\n  \r\n    return     <div ref={el => (mapContainer.current = el)} style={styles} />    ;\r\n  \r\n}\r\n\r\nexport default MyMap;","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Progress from 'react-circle-progress-bar'\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport MyMap from './MyMap';\r\nconst { Map } = require('immutable');\r\nconst OPEN_WEATHER_API_TOKEN = process.env.REACT_APP_OPEN_WEATHER_TOKEN;\r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { weather: [], position: [] };\r\n    this.blabla = 'blabla';\r\n    this.map1 = Map({ a: 1, b: 2, c: 3 });\r\n    this.map2 = this.map1.set('b', 50);   \r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"Weather Data Retrieval...\");\r\n    let lat = null;\r\n    let lon = null;\r\n    navigator.geolocation.getCurrentPosition(\r\n      position => {\r\n        //console.log('position')\r\n        //console.log(position)\r\n        lat = position.coords.latitude;\r\n        lon = position.coords.longitude;\r\n        //meteo actuelle weather?\r\n        let weatherCurrent = 'https://api.openweathermap.org/data/2.5/weather?lat=' + lat + '&lon=' + lon + '&units=metric&appid='+OPEN_WEATHER_API_TOKEN;\r\n        // forecast pour les prevision par default retourne une liste de 7\r\n        //let weatherForecast = 'https://api.openweathermap.org/data/2.5/forecast/daily?lat='+lat+'&lon='+lon+'&units=metric&appid=526309393592f5cf6ed361609dfd8e78';\r\n        //'https://api.openweathermap.org/data/2.5/forecast/daily?q=Neuchatel&units=metric&appid=526309393592f5cf6ed361609dfd8e78')\r\n        fetch(weatherCurrent)\r\n          .then(res => res.json())\r\n          .then((data) => {\r\n            console.log('----weather data object in promise-------');\r\n            console.log(data);\r\n            //console.log(JSON.parse(JSON.stringify(data)));\r\n           // console.log(JSON.stringify(data.weather[0].description));\r\n            this.setState({\r\n              weather: data,\r\n              temp: data.main.temp,\r\n              position: position\r\n            });\r\n          })\r\n          .catch(console.log('error'))\r\n\r\n      },\r\n      err => console.log(err)\r\n    );\r\n\r\n  }\r\n  render() {\r\n    console.log('render')\r\n\r\n    const styles = {\r\n      root: {\r\n        minWidth: 275,\r\n      },\r\n      bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n      },\r\n      title: {\r\n        fontSize: 24,\r\n      },\r\n      pos: {\r\n        marginBottom: 12,\r\n      },\r\n    };\r\n\r\n    console.log(JSON.stringify(styles.title.fontSize));\r\n    console.log('weather json object');\r\n    console.log(this.state);\r\n    console.log(JSON.stringify(this.state.weather.main));\r\n    //if(this.state.weather.main){\r\n\r\n      this.state.weather.main=== undefined?console.log('loading...'):console.log(this.state.weather.main.temp);\r\n    \r\n    \r\n   \r\n    return (\r\n      <div className=\"content\">\r\n        <h2>Home</h2>\r\n        <div className=\"row space-between debugBorderFushia\">\r\n          <Card id=\"card\" className=\"column info\">\r\n            <CardContent>\r\n              <Typography component={'span'} style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"primary\" gutterBottom>\r\n                <div>             Information Alert      </div>\r\n              </Typography>\r\n              <Typography component={'span'} className={JSON.stringify(styles.pos)} gutterBottom>\r\n                <div className=\"valueable \">\r\n                  <div className=\"cardRow value \">5</div>\r\n                  <div className=\"cardRow central fix debugBorderFushia\">\r\n                    <div className=\"center\">\r\n                      <div className=\"title\">This is a Title</div>\r\n                      <div className=\"description\" >Description: This is a short description</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"cardRow icon\">\r\n                    <InfoIcon style={{ fontSize: 50 }} ></InfoIcon>\r\n                  </div>\r\n                  <div className=\"cardRow center\">\r\n                    <Progress progress={75} />\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </Typography>\r\n\r\n            </CardContent>\r\n\r\n          </Card>\r\n\r\n\r\n          <Card id=\"card2\" className=\"column warn\">\r\n            <CardContent>\r\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"primary\" gutterBottom>\r\n                Word of the Day Primary 2\r\n        </Typography>\r\n              <Typography className={JSON.stringify(styles.pos)} color=\"secondary\" gutterBottom>\r\n                Word of the Day Secondary 2\r\n        </Typography>\r\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"textPrimary\" gutterBottom>\r\n                Word of the Day textPrimary 2\r\n        </Typography>\r\n              <Typography className={JSON.stringify(styles.pos)} color=\"textSecondary\" gutterBottom>\r\n                Word of the Day textSecondary 2\r\n        </Typography>\r\n            </CardContent>\r\n\r\n          </Card>\r\n\r\n\r\n          <Card id=\"card3\" className=\"column error\">\r\n            <CardContent>\r\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"primary\" gutterBottom>\r\n                Word of the Day Primary 3\r\n        </Typography>\r\n              <Typography className={JSON.stringify(styles.pos)} color=\"secondary\" gutterBottom>\r\n                Word of the Day Secondary 3\r\n        </Typography>\r\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"textPrimary\" gutterBottom>\r\n                Word of the Day textPrimary 3\r\n        </Typography>\r\n              <Typography className={JSON.stringify(styles.pos)} color=\"textSecondary\" gutterBottom>\r\n                Word of the Day textSecondary 3\r\n        </Typography>\r\n            </CardContent>\r\n\r\n          </Card>\r\n\r\n        </div>\r\n        <div className=\"row space-between center map debugBorderGreen\">\r\n          <MyMap></MyMap>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport MyMap from './MyMap';\r\nconst { Map } = require('immutable');\r\n\r\nclass Weather extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { weather: [], position: [] };\r\n    this.blabla = 'blabla';\r\n    this.map1 = Map({ a: 1, b: 2, c: 3 });\r\n    this.map2 = this.map1.set('b', 50);\r\n\r\n    console.log('immutable object ');\r\n    console.log(this.map1);\r\n    console.log(this.map2);\r\n    console.log(this.map1.toJS());\r\n    console.log(this.map2.toJS());\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"Weather Data Retrieval...\");\r\n    let lat = null;\r\n    let lon = null;\r\n    navigator.geolocation.getCurrentPosition(\r\n\r\n      position => {\r\n        console.log('position')\r\n        console.log(position)\r\n        lat = position.coords.latitude;\r\n        lon = position.coords.longitude;\r\n        //meteo actuelle weather?\r\n        let weatherCurrent = 'https://api.openweathermap.org/data/2.5/weather?lat=' + lat + '&lon=' + lon + '&units=metric&appid=526309393592f5cf6ed361609dfd8e78';\r\n        // forecast pour les prevision par default retourne une liste de 7\r\n        //let weatherForecast = 'https://api.openweathermap.org/data/2.5/forecast/daily?lat='+lat+'&lon='+lon+'&units=metric&appid=526309393592f5cf6ed361609dfd8e78';\r\n        //'https://api.openweathermap.org/data/2.5/forecast/daily?q=Neuchatel&units=metric&appid=526309393592f5cf6ed361609dfd8e78')\r\n        fetch(weatherCurrent)\r\n          .then(res => res.json())\r\n          .then((data) => {\r\n            console.log('----weather data object in promise-------');\r\n            console.log(JSON.parse(JSON.stringify(data)));\r\n            console.log(JSON.stringify(data.weather[0].description));\r\n            this.setState({\r\n              weather: data,\r\n              temp: data.main.temp,\r\n              position: position\r\n            });\r\n          })\r\n          .catch(console.log('error'))\r\n\r\n      },\r\n      err => console.log(err)\r\n    );\r\n\r\n  }\r\n\r\n  render() {\r\n    console.log('render')\r\n\r\n    const styles = {\r\n      root: {\r\n        minWidth: 275,\r\n      },\r\n      bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n      },\r\n      title: {\r\n        fontSize: 24,\r\n      },\r\n      pos: {\r\n        marginBottom: 12,\r\n      },\r\n    };\r\n\r\n    console.log(JSON.stringify(styles.title.fontSize));\r\n    console.log('weather json object');\r\n    console.log(this.state);\r\n    console.log(JSON.stringify(this.state.weather.main));\r\n    //if(this.state.weather.main){\r\n\r\n      this.state.weather.main=== undefined?console.log('loading...'):console.log(this.state.weather.main.temp);\r\n  \r\n    return (\r\n      <div className=\"content\">\r\n        <h2>Weather</h2>\r\n        <div className=\"row space-between debugBorderFushia\">\r\n          <Card id=\"card\" className=\"column info\">\r\n            <CardContent>\r\n              <Typography component={'span'} style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"primary\" gutterBottom>\r\n                <div>             Information Alert      </div>\r\n              </Typography>\r\n              <Typography component={'span'} className={JSON.stringify(styles.pos)} gutterBottom>\r\n                <div className=\"valueable \">\r\n                  <div className=\"cardRow value \">5</div>\r\n                  <div className=\"cardRow central fix debugBorderFushia\">\r\n                    <div className=\"center\">\r\n                      <div className=\"title\">This is a Title</div>\r\n                      <div className=\"description\" >Description: This is a short description</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"cardRow icon\">\r\n                    <InfoIcon style={{ fontSize: 50 }} ></InfoIcon>\r\n                  </div>\r\n                </div>\r\n              </Typography>\r\n\r\n            </CardContent>\r\n\r\n          </Card>\r\n\r\n\r\n          <Card id=\"card2\" className=\"column warn\">\r\n            <CardContent>\r\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"primary\" gutterBottom>\r\n                Word of the Day Primary 2\r\n          </Typography>\r\n                <Typography className={JSON.stringify(styles.pos)} color=\"secondary\" gutterBottom>\r\n                  Word of the Day Secondary 2\r\n          </Typography>\r\n                <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"textPrimary\" gutterBottom>\r\n                  Word of the Day textPrimary 2\r\n          </Typography>\r\n                <Typography className={JSON.stringify(styles.pos)} color=\"textSecondary\" gutterBottom>\r\n                  Word of the Day textSecondary 2\r\n          </Typography>\r\n            </CardContent>\r\n\r\n          </Card>\r\n\r\n\r\n          <Card id=\"card3\" className=\"column error\">\r\n            <CardContent>\r\n              <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"primary\" gutterBottom>\r\n                Word of the Day Primary 3\r\n              </Typography>\r\n                    <Typography className={JSON.stringify(styles.pos)} color=\"secondary\" gutterBottom>\r\n                      Word of the Day Secondary 3\r\n              </Typography>\r\n                    <Typography style={{ fontSize: JSON.stringify(styles.title.fontSize) + 'px' }} color=\"textPrimary\" gutterBottom>\r\n                      Word of the Day textPrimary 3\r\n              </Typography>\r\n                    <Typography className={JSON.stringify(styles.pos)} color=\"textSecondary\" gutterBottom>\r\n                      Word of the Day textSecondary 3\r\n              </Typography>\r\n            </CardContent>\r\n\r\n          </Card>\r\n\r\n        </div>\r\n   \r\n        <div className=\"row space-between center map debugBorderGreen\">\r\n          <MyMap></MyMap>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weather;","import React, { Component } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport '.././History.css';\r\nimport { AreaChart,Area, XAxis, YAxis, Legend,ResponsiveContainer} from 'recharts';\r\n\r\n\r\nlet dataWeather = [];\r\n\r\nconst formatXAxis = (unix_timestamp) => {\r\n  var date = new Date(unix_timestamp * 1000);\r\n  var dd = date.getDate();\r\n  var mm = date.getMonth()+1;\r\n  //var yyyy = date.getFullYear();\r\n  if(dd<10) {dd='0'+dd}\r\n  if(mm<10) {mm='0'+mm}\r\nreturn dd+'/'+mm//+yyyy//+' ' + hours + ':' + minutes.substr(-2);\r\n\r\n}\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst styles = theme => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\nclass History extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { weather: [], position: [] };\r\n   \r\n  }\r\n  componentDidMount() {\r\n    let lat = null;\r\n    let lon = null;\r\n    navigator.geolocation.getCurrentPosition(\r\n      position => {\r\n        lat = position.coords.latitude;\r\n        lon = position.coords.longitude;\r\n        //meteo actuelle weather?\r\n        let weatherCurrent = 'https://api.openweathermap.org/data/2.5/onecall?lat=' + lat + '&lon=' + lon + '&units=metric&appid='+process.env.REACT_APP_OPEN_WEATHER_TOKEN;\r\n        // forecast pour les prevision par default retourne une liste de 7\r\n        //let weatherForecast = 'https://api.openweathermap.org/data/2.5/forecast/daily?lat='+lat+'&lon='+lon+'&units=metric&appid=526309393592f5cf6ed361609dfd8e78';\r\n        //'https://api.openweathermap.org/data/2.5/forecast/daily?q=Neuchatel&units=metric&appid=526309393592f5cf6ed361609dfd8e78')\r\n        fetch(weatherCurrent)\r\n          .then(res => res.json())\r\n          .then((data) => {\r\n            console.log('----weather data object in promise-------');\r\n            console.log(data);\r\n            //dataWeather =getTemperaturesHourly(data);\r\n            dataWeather= data;\r\n            this.setState({\r\n              weather: data,\r\n             // temp: data.main.temp,\r\n              position: position\r\n            });\r\n          })\r\n          .catch(console.log('error'))\r\n\r\n      },\r\n      err => console.log(err)\r\n    );\r\n\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    console.log(classes)\r\n    return (\r\n      <div className=\"content\">\r\n        <h2>History</h2>\r\n        <div className=\"history-row space-between\">\r\n        <div className=\"column card-dark\">\r\n            <div className=\"chart-title\">Température</div>  \r\n            <div className=\"chart-value\">{dataWeather?.current?.temp}°</div>   \r\n            <ResponsiveContainer> \r\n              <AreaChart  \r\n                data={dataWeather.daily} margin={{   top: 0, right: -20, left: 0, bottom: 15, }}>\r\n                    <defs>\r\n                      <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                              <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\r\n                              <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\r\n                          </linearGradient>\r\n                    </defs>\r\n                    <XAxis dataKey=\"dt\" tick={{fontSize: 10}} tickFormatter={formatXAxis} />\r\n                    <Area type=\"monotone\" dataKey=\"temp.day\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\r\n                </AreaChart>\r\n            </ResponsiveContainer>\r\n           </div>\r\n           <div className=\"column card-dark\">\r\n\r\n              <div className=\"chart-title\">Humidité</div>            \r\n              <div className=\"chart-value\">{dataWeather?.current?.humidity}%</div>     \r\n                    <ResponsiveContainer> \r\n                          <AreaChart  data={dataWeather.daily} margin={{   top: 0, right: -20, left: 0, bottom: 15, }}>\r\n                              <defs>\r\n                                <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                    <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\r\n                                    <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\r\n                                </linearGradient>\r\n\r\n                              </defs>\r\n                              <XAxis dataKey=\"dt\" tick={{fontSize: 10}} tickFormatter={formatXAxis}/>\r\n                              <Area type=\"monotone\" dataKey=\"humidity\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\r\n                          </AreaChart>\r\n                    </ResponsiveContainer> \r\n             \r\n\r\n</div>\r\n            <div className=\"column card-dark\">\r\n            <div className=\"chart-title\">Pression </div> \r\n            <div className=\"chart-value\">{dataWeather?.current?.pressure} hPa</div>   \r\n            <ResponsiveContainer> \r\n                  <AreaChart   \r\n       \r\n                  data={dataWeather.daily} margin={{   top: 0, right: -20, left: 0, bottom: 15, }}>\r\n                      <defs>\r\n                      <linearGradient id=\"colorAmt\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                            <stop offset=\"5%\" stopColor=\"#923CB5\" stopOpacity={0.8}/>\r\n                            <stop offset=\"95%\" stopColor=\"#000000\" stopOpacity={0}/>\r\n                        </linearGradient>\r\n                      </defs>\r\n                      <XAxis dataKey=\"dt\" tick={{fontSize: 10}} tickFormatter={formatXAxis}/>                   \r\n                      <Area type=\"monotone\" dataKey=\"pressure\" stroke=\"#923CB5\" fillOpacity={1} fill=\"url(#colorAmt)\" />\r\n                  </AreaChart>\r\n                  </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"history-row space-between debugBorder\">\r\n        <TableContainer component={Paper}>\r\n          <Table className={styles.table} size=\"small\" aria-label=\"a dense table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Date</TableCell>\r\n                <TableCell align=\"center\">Température</TableCell>\r\n                <TableCell align=\"center\">Humidité</TableCell>\r\n                <TableCell align=\"center\">Pression</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {dataWeather?.daily?.map((row) => (\r\n                <TableRow key={row.temp.day}>\r\n                  <TableCell align=\"center\">{formatXAxis(row.dt)}</TableCell>\r\n                  <TableCell align=\"center\">{row.temp.day}</TableCell>\r\n                  <TableCell align=\"center\">{row.humidity}</TableCell>\r\n                  <TableCell align=\"center\">{row.pressure}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default History;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n        <div  className=\"content\">\r\n          <h2>About</h2>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './App.css';\r\nimport Layout from './Layout'\r\nimport Home from './components/Home';\r\nimport Weather from './components/Weather';\r\nimport History from './components/History';\r\nimport About from './components/About';\r\nimport MyMap from './components/MyMap';\r\n\r\nimport {Route, Switch } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      </header>\r\n      <div className=\"container\">\r\n        <main>\r\n          <Layout></Layout>\r\n          <Switch>\r\n            <Route path=\"/weather-app\" component={Home} exact />\r\n            <Route path=\"/weather-app/weather\" component={Weather} />\r\n            <Route path=\"/weather-app/map\" component={MyMap} />\r\n            <Route path=\"/weather-app/history\" component={History} />\r\n            <Route path=\"/weather-app/about\" component={About} />\r\n          </Switch>\r\n\r\n\r\n\r\n        </main>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n    , document.getElementById('root')\r\n\r\n\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}